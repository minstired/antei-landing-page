<!DOCTYPE html>
<html>

	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>ANTEI Limited - Worldwide Consultancy and Execution | ANTEI</title>
		<link rel="icon" type="image/x-icon" href="./favicon.png">
		<meta name="description" content="ANTEI Limited is a consultancy &amp; execution company offering accredited services across diverse industries such as Finance, Trade, Agriculture, Biomedicine, among others. Explore our expertise today.">
		<link rel="canonical" href="https://www.anteihk.com/">
		<meta name="keywords" content="ANTEI Limited, Consultancy, R&amp;D">
		<meta property="og:title" content="ANTEI Limited - Worldwide Consultancy and Execution | ANTEI">
		<meta property="og:description" content="ANTEI Limited is a consultancy &amp; execution company offering accredited services across diverse industries such as Finance, Trade, Agriculture, Biomedicine, among others. Explore our expertise today.">
		<meta property="og:url" content="https://www.anteihk.com/">
		<meta property="og:type" content="website">
		<meta property="og:image" content="./assets/antei-logo---purple-mp8nq5E7qLsW1Lpe.webp">
		<meta name="twitter:title" content="ANTEI Limited - Worldwide Consultancy and Execution | ANTEI">
		<meta name="twitter:description" content="ANTEI Limited is a consultancy &amp; execution company offering accredited services across diverse industries such as Finance, Trade, Agriculture, Biomedicine, among others. Explore our expertise today.">
		<meta name="twitter:image" content="./assets/antei-logo---purple-mp8nq5E7qLsW1Lpe.webp">
		<meta name="twitter:card" content="summary_large_image">
		<link rel="alternate" hreflang="x-default" href="https://www.anteihk.com/">

		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css">
		<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide-extension-auto-scroll@0.5.3/dist/js/splide-extension-auto-scroll.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/simple-parallax-js@5.5.1/dist/simpleParallax.min.js"></script>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

		<script src="https://cdn.tailwindcss.com"></script>
		
		<!-- Swiper Js Link JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

    <!-- Typing Animation -->

    <script src="https://unpkg.com/typed.js@2.1.0/dist/typed.umd.js"></script>


    <!-- Scroll Reveal for web pages -->
    <script src="https://unpkg.com/scrollreveal@4.0.0/dist/scrollreveal.min.js"></script>
	</head>

	<style>
		:root {
			--primary: #904af2;
			--primaryLight: #904af2;
			--secondary: #f2b44b;
			--secondaryLight: #f2b44b;
			--headerColor: #1a1a1a;
			--bodyTextColor: #4e4b66;
			--bodyTextColorWhite: #fafbfc;
			/* 13px - 16px */
			--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
			/* 31px - 49px */
			--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
			--bodyFontSize: 1rem;
			/* 60px - 100px top and bottom */
			--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
			
			
			--bg-color: #141414;
			--second-bg-color: rgb(14, 7, 36);
			--third-bg-color: rgb(24, 18, 46);
			--fourth-bg-color: rgb(46, 32, 95);
			--bg-color-opacity: #0000004f;
			--text-color: #ededed;
			--main-color: rgb(230, 172, 0);
			--bodyTextColor: #4e4b66;
			--secondary: #f2b44b;
			--primary: #904af2;

			--bg-dark: rgb(14, 7, 36);
			--bg-light: #ffffff;
		}

		body {
			margin: 0;
			padding: 0;
			/* FONT */
			font-family: 'Montserrat', sans-serif;
			background: var(--bg-dark);
		}

		*,
		*:before,
		*:after {
			/* prevents padding from affecting height and width */
			box-sizing: border-box;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: .1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: 0.25rem;
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: 43.75rem;
			margin: 0 0 1rem 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: 40.625rem;
			margin: 0;
			color: var(--bodyTextColor);
		}
	</style>

	<body>

		

<!-- ============================================ -->
<!--                 Header 229                   -->
<!-- ============================================ -->

<header id="cs-navigation">
	<div class="cs-container">
		<!--Nav Logo-->
		<!--<a href="#home" class="cs-logo" aria-label="back to home">
			<img src="./assets/antei-logo-white_bright-AE04v7ORK2FrWw11.webp" alt="ANTEI logo" width="210" height="29" aria-hidden="true" decoding="async"
				class="cs-logo-white">
			<img src="./assets/antei-logo_black-letters-YyvoZEjM7esLR5v3.webp" alt="ANTEI logo" width="210" height="29" aria-hidden="true" decoding="async"
				class="cs-logo-black">
		</a> -->
		<div class="logo-container">
			<div class="logo">
				<div class="logo-inner">
					<img src="./assets/ANTEI Logo Bright.webp" alt="ANTEI Logo" />
				</div>
			</div>
			<div class="name">
				<img src="./assets/ANTEI_Logo_Name_White.webp" alt="ANTEI Name" />
			</div>
		</div>
		<!--Navigation List-->
		<nav class="cs-nav" role="navigation">
			<!--Mobile Nav Toggle-->
			<button class="cs-toggle" aria-label="mobile menu toggle">
				<div class="cs-box" aria-hidden="true">
					<span class="cs-line cs-line1" aria-hidden="true"></span>
					<span class="cs-line cs-line2" aria-hidden="true"></span>
					<span class="cs-line cs-line3" aria-hidden="true"></span>
				</div>
			</button>
			<div class="cs-ul-wrapper">
				<ul id="cs-expanded" class="cs-ul" aria-expanded="false">
					<li class="cs-li">
						<a href="#home" class="cs-li-link">
							Home
						</a>
					</li>
					<!-- <li class="cs-li cs-dropdown" tabindex="0">
						<span class="cs-li-link">
							Services
							<img class="cs-drop-icon" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/down-gold.svg"
								alt="dropdown icon" width="15" height="15" decoding="async" aria-hidden="true">
						</span>
						<ul class="cs-drop-ul">
							<li class="cs-drop-li">
								<a href="$p${fintech_link}" class="cs-li-link cs-drop-link">FinTech</a>
							</li>
							<li class="cs-drop-li">
								<a href="$p${crm_link}" class="cs-li-link cs-drop-link">CRM</a>
							</li>
						</ul>
					</li> -->
					<li class="cs-li">
						<a href="#timeline-229" class="cs-li-link">
							Portfolio
						</a>
					</li>
					<li class="cs-li">
						<a href="#get-in-touch" class="cs-li-link">
							Contact
						</a>
					</li>
				</ul>
			</div>
		</nav>
	</div>
</header>

<script>
	// Smooth scrolling
	(function () {
		document.querySelectorAll('a[href^="#"]').forEach(anchor => {
			anchor.addEventListener('click', function (e) {
				e.preventDefault();
				document.querySelector(this.getAttribute('href')).scrollIntoView({
					behavior: 'smooth'
				});
			});
		});
	})();
    (function () {
        document.addEventListener('DOMContentLoaded', function () {
            const header = document.querySelector("#cs-navigation");
            if (!header) return;

            const toggle = header.querySelector(".cs-toggle");
            const nav = header.querySelector(".cs-nav");
            const body = document.body;
            const logoContainer = header.querySelector(".cs-container"); // New: Select logo container

            // Mobile menu toggle
            toggle.addEventListener("click", () => {
                header.classList.toggle("cs-active");
                body.classList.toggle("cs-open");
                logoContainer.classList.toggle("blurred"); // New: Toggle 'blurred' class

                const csUL = header.querySelector('#cs-expanded');
                const csExpanded = csUL.getAttribute('aria-expanded');
                csUL.setAttribute('aria-expanded', csExpanded === 'false' ? 'true' : 'false');
            });

            // Scroll behavior
            let lastScrollTop = 0;
            const scrollThreshold = 100;
            const autoCloseThreshold = 300;

            window.addEventListener("scroll", () => {
                let scrollTop = window.pageYOffset || document.documentElement.scrollTop;
                
                if (scrollTop > scrollThreshold) {
                    header.classList.add("cs-scrolled");
                } else {
                    header.classList.remove("cs-scrolled");
                }
                
                if (scrollTop > lastScrollTop && scrollTop > scrollThreshold) {
                    header.style.transform = "translateY(-100%)";
                } else {
                    header.style.transform = "translateY(0)";
                }

                // Auto-close menu on mobile after scrolling
                if (window.innerWidth < 1024 && scrollTop > autoCloseThreshold) {
                    header.classList.remove('cs-active');
                    body.classList.remove('cs-open');
                    logoContainer.classList.remove('blurred'); // New: Remove 'blurred' class
                    const csUL = header.querySelector('#cs-expanded');
                    csUL.setAttribute('aria-expanded', 'false');
                }

                lastScrollTop = scrollTop;
            });

            // Close mobile menu when clicking outside
            document.addEventListener('click', (e) => {
                if (window.innerWidth < 1024 && !header.contains(e.target) && header.classList.contains('cs-active')) {
                    header.classList.remove('cs-active');
                    body.classList.remove('cs-open');
                    logoContainer.classList.remove('blurred'); // New: Remove 'blurred' class
                    const csUL = header.querySelector('#cs-expanded');
                    csUL.setAttribute('aria-expanded', 'false');
                }
            });

            // Ensure proper state on window resize
            window.addEventListener('resize', () => {
                if (window.innerWidth >= 1024) {
                    header.classList.remove('cs-active');
                    body.classList.remove('cs-open');
                    logoContainer.classList.remove('blurred'); // New: Remove 'blurred' class
                    const csUL = header.querySelector('#cs-expanded');
                    csUL.setAttribute('aria-expanded', 'false');
                }
            });
        });
    })();
</script>
	</script>

<style>
	/*-- -------------------------- -->
	<---         Header 229         -->
	<--- -------------------------- -*/
	#cs-navigation .logo-container {
		display: flex;
		align-items: center;
		height: clamp(3rem, 6vw, 5rem);
		width: auto;
	}

	#cs-navigation .logo-inner {
		transition: transform 0.3s;
		transform-style: preserve-3d;
	}

	#cs-navigation .logo img {
		width: clamp(40px, 8vw, 80px);
		height: clamp(40px, 8vw, 80px);
	}

	#cs-navigation .name {
		overflow: hidden;
		width: 0;
		transition: width 0.2s ease;
	}

	#cs-navigation .name img {
		width: clamp(100px, 15vw, 150px);
		height: auto;
	}

	#cs-navigation .logo-container:hover .logo-inner {
		transform: rotateY(180deg);
	}

	#cs-navigation .logo-container:hover .name {
		width: clamp(100px, 15vw, 150px);
	}

	.cs-container.blurred {
		-webkit-backdrop-filter: blur(10px);
		backdrop-filter: blur(10px);
	}

	@media only screen and (min-width: 0rem) {
		#cs-navigation {
			font-weight: 600;
			width: 100%;
			padding: 0.75rem 1rem;
			background-color: transparent;
			transition: background-color 0.3s ease, transform 0.3s ease;
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			z-index: 10000;
		}

		#cs-navigation .cs-container {
			display: flex;
			justify-content: space-between;
			align-items: center;
		}

		#cs-navigation .cs-logo {
			width: 40%;
			max-width: 9.125rem;
			height: 100%;
			display: flex;
			justify-content: flex-start;
			align-items: center;
		}

		#cs-navigation .cs-logo img {
			width: 100%;
			height: 100%;
			object-fit: contain;
		}

		#cs-navigation .cs-logo-white {
			display: block;
		}

		#cs-navigation .cs-logo-black {
			display: none;
		}

		#cs-navigation .cs-toggle {
			width: 3rem;
			height: 3rem;
			background-color: transparent;
			border: none;
			display: flex;
			justify-content: center;
			align-items: center;
		}

		#cs-navigation .cs-box {
			width: 1.75rem;
			height: 1rem;
			position: relative;
		}

		#cs-navigation .cs-line {
			width: 100%;
			height: 2px;
			background-color: var(--text-color);
			position: absolute;
			left: 0;
			transition: all 0.3s ease;
		}

		#cs-navigation .cs-line1 {
			top: 0;
		}

		#cs-navigation .cs-line2 {
			top: 50%;
			transform: translateY(-50%);
		}

		#cs-navigation .cs-line3 {
			bottom: 0;
		}

		#cs-navigation .cs-ul-wrapper {
			width: 100%;
			height: auto;
			background-color: #fff;
			box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
			opacity: 0;
			position: absolute;
			top: 100%;
			left: 0;
			z-index: -1;
			overflow: hidden;
			transform: scaleY(0);
			transition: transform 0.4s ease, opacity 0.3s ease;
			transform-origin: top;
			background: var(--bg-color-opacity);
			scrollbar-width: none;
		}

		#cs-navigation .cs-ul {
			width: 100%;
			height: auto;
			max-height: 65vh;
			margin: 0;
			padding: 3rem 0 2.4rem 0;
			display: flex;
			flex-direction: column;
			justify-content: flex-start;
			align-items: center;
			gap: 1.25rem;
			overflow-y: scroll;
			scrollbar-width: none;
		}

		#cs-navigation .cs-li {
			color: var(--text-color);
			text-align: center;
			list-style: none;
			width: 100%;
			margin-right: 0;
			opacity: 0;
			transform: translateY(-4.375rem);
			transition: transform 0.6s ease, opacity 0.9s ease;
		}



		#cs-navigation .cs-li-link {
			font-size: 1.25rem;
			line-height: 1.2em;
			text-decoration: none;
			margin: 0;
			color: var(--text-color);
			display: inline-block;
			position: relative;
		}

		#cs-navigation .cs-li-link:hover {
			color: var(--main-color);
		}

		/* Dropdown styles */
		#cs-navigation .cs-dropdown {
			position: relative;
		}

		#cs-navigation .cs-drop-icon {
			width: 0.9375rem;
			height: auto;
			display: inline-block;
			margin-left: 0.5rem;
			color: var(--bg-color);
		}

		#cs-navigation .cs-drop-ul {
			width: 100%;
			height: 0;
			margin: 0;
			padding: 0;
			background-color: #f7f7f7;
			opacity: 0;
			display: flex;
			visibility: hidden;
			flex-direction: column;
			justify-content: flex-start;
			align-items: center;
			gap: 0.75rem;
			overflow: hidden;
			transition: height 0.3s ease, opacity 0.3s ease, visibility 0.3s ease;
			background: var(--bg-color-opacity);
		}

		#cs-navigation .cs-drop-li {
			list-style: none;
		}

		#cs-navigation .cs-drop-link {
			font-size: 1rem;
			color: var(--text-color);
		}

		/* Active mobile menu styles */
		#cs-navigation.cs-active {
			background-color: var(--bg-color-opacity);
		}

		#cs-navigation.cs-active .cs-logo-white {
			display: none;
		}

		#cs-navigation.cs-active .cs-logo-black {
			display: block;
		}

		#cs-navigation.cs-active .cs-line {
			background-color: var(--text-color);
		}

		#cs-navigation.cs-active .cs-ul-wrapper {
			opacity: 1;
			transform: scaleY(1);
			background: var(--bg-color-opacity);
		}

		#cs-navigation.cs-active .cs-ul:hover {
			color: var(--primary);
		}

		#cs-navigation.cs-active .cs-li {
			opacity: 1;
			transform: translateY(0);
		}

		#cs-navigation.cs-active .cs-line1 {
			top: 50%;
			transform: translate(-50%, -50%) rotate(225deg);
		}

		#cs-navigation.cs-active .cs-line2 {
			opacity: 0;
		}

		#cs-navigation.cs-active .cs-line3 {
			bottom: 50%;
			transform: translate(-50%, 50%) rotate(-225deg);
		}

		/* Scrolled styles */
		#cs-navigation.cs-scrolled {
			background-color: var(--bg-color-opacity);
			box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
		}

		#cs-navigation.cs-scrolled .cs-logo-white {
			display: none;
		}

		#cs-navigation.cs-scrolled .cs-logo-black {
			display: block;
		}

		#cs-navigation.cs-scrolled .cs-line {
			color: var(--text-color);
		}

		#cs-navigation:before {
			content: "";
			width: 100%;
			height: 0vh;
			background: rgba(0, 0, 0, 0.6);
			opacity: 0;
			display: block;
			position: absolute;
			top: 100%;
			right: 0;
			z-index: -1100;
			transition: height 0.5s, opacity 0.5s;
			-webkit-backdrop-filter: blur(10px);
			backdrop-filter: blur(10px);
		}

		#cs-navigation.cs-active:before {
			height: 150vh;
			opacity: 1;
		}

	}

	/* Tablet - 768px */
	@media only screen and (min-width: 48rem) {
		#cs-navigation {
			padding: 1rem;
		}

		#cs-navigation .cs-logo {
			max-width: 12rem;
		}
	}

	/* Desktop - 1024px */
	@media only screen and (min-width: 64rem) {
		#cs-navigation {
			padding: 1rem;
		}

		#cs-navigation .cs-container {
			max-width: 80rem;
			margin: 0 auto;
		}

		#cs-navigation .cs-logo {
			width: 18.4%;
			max-width: 21.875rem;
			height: 4.0625rem;
		}

		#cs-navigation .cs-toggle {
			display: none;
		}

		#cs-navigation .cs-ul-wrapper {
			width: auto;
			height: auto;
			background-color: transparent;
			box-shadow: none;
			opacity: 1;
			position: static;
			transform: none;
			overflow: visible;
			transition: none;
		}

		#cs-navigation .cs-ul {
			padding: 0;
			max-height: none;
			flex-direction: row;
			justify-content: flex-end;
			gap: 2rem;
			overflow: visible;
		}

		#cs-navigation .cs-li {
			width: auto;
			opacity: 1;
			transform: none;
		}

		#cs-navigation .cs-li-link {
			font-size: 1rem;
			color: var(--text-color);
		}

		#cs-navigation.cs-scrolled .cs-li-link {
			color: var(--text-color);
		}

		#cs-navigation .cs-li-link:hover {
			color: var(--secondary);
		}

		/* Desktop dropdown styles */
		#cs-navigation .cs-dropdown {
			position: relative;
		}

		#cs-navigation .cs-dropdown:hover .cs-drop-ul {
			opacity: 1;
			visibility: visible;
			transform: translateY(0);
		}

		#cs-navigation .cs-drop-ul {
			position: absolute;
			top: 100%;
			left: 50%;
			transform: translateX(-50%) translateY(-0.5rem);
			width: auto;
			height: auto;
			padding: 0.5rem 0;
			background-color: #fff;
			box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
			border-radius: 0.25rem;
			opacity: 0;
			visibility: hidden;
			transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
		}

		#cs-navigation .cs-drop-li {
			width: 100%;
			padding: 0.5rem 1rem;
			white-space: nowrap;
		}

		#cs-navigation .cs-drop-link {
			color: var(--headerColor);
			transition: color 0.3s ease;
		}

		#cs-navigation .cs-drop-link:hover {
			color: var(--primary);
		}
	}
</style>
		

<!-- ============================================ -->
<!--                    Hero                      -->
<!-- ============================================ -->

<section class="home" id="home">
	<div class="home-content">
		<h1>Your Vision.<br>Realized.</h1>
		<h2><span class="type-animation"></span></h2>
		<a href="#timeline-229">
			<button> Explore Portfolio → </button>
		</a>
	</div>

</section>

<script>
	(function () {
		document.addEventListener('DOMContentLoaded', function () {
			var image = document.getElementsByClassName('cs-parallax-image');
			new simpleParallax(image, {
				scale: 1.5,
				delay: .6,
				transition: 'cubic-bezier(0,0,0,1)'
			});
		});
	})();

	var typed = new Typed('.type-animation', {
		strings: ['AI & ML', 'Digital Transformation', 'Trade & Finance', 'Strategy'],
		typeSpeed: 50,
		loop: true,
		backSpeed: 50,
	});
</script>

<style>

	.home {
		width: 100%;
		min-height: 100vh;
		padding: 5rem 5% 2rem;
		background: url(./assets/hero-image.webp) center/cover no-repeat;;
		display: flex;
		align-items: center;
	}

	.home-content {
		max-width: 60rem;
		margin-left: 15%;
		width: 100%;
		padding: 5rem 0;
		opacity: 1;
	}

	.home-content h1 {
		color: var(--text-color);
		font-size: 6rem;
		font-weight: 700;
		line-height: 1.2;
	}

	.home-content h2 {
		font-size: 4rem;
		font-weight: 600;
		color: var(--main-color);
		/* -webkit-text-stroke: .7px var(--main-color); */
		line-height: 2;
		margin-bottom: 3rem;
	}

	.type-animation {
		color: var(--main-color);
	}

	button {
		width: 100%;
		height: 5rem;
		max-width: 30rem;
		padding: 1rem;
		color: var(--main-color);
		border-radius: 7px;
		background: transparent;
		border: 0.2rem solid var(--main-color);
		cursor: pointer;
		font-weight: 600;
		font-size: clamp(1rem, 3vw, 2rem);
		position: relative;
		z-index: 1;
		margin: 2rem 0;
		transition: color 0.5s ease;
	}

	button:hover {
		color: var(--text-color);
	}

	button::after {
		position: absolute;
		content: '';
		width: 0;
		height: 100%;
		top: 0;
		left: 0;
		background: var(--main-color);
		z-index: -1;
		transition: width 0.5s ease;
	}

	button:hover::after {
		width: 100%;
	}

	/* Media Queries */
	@media screen and (max-width: 768px) {
		.home {
			padding: 3rem 5% 2rem;
		}

		.home-content {
			padding: 3rem 0;
		}

		button {
			width: 100%;
		}
	}

	@media screen and (max-width: 480px) {
		.home-content {
			max-width: 60rem;
			margin-left: 5%;
			width: 100%;
			padding: 5rem 0;
			opacity: 1;
		}
		.home-content h1 {
			font-size: 3rem;
		}
		.home-content h2 {
			font-size: 1.5rem;
		}
		button {
			width: 80%;
			height: 60%;
		}
	}
</style>
		

<section id="about-us-229">
    <div class="cs-container">
        <div class="cs-content">
            <h2 class="cs-title">About Us</h2>
            <p class="cs-text">
                ANTEI takes your vision from concept to reality. We offer comprehensive consulting, R&D, and project
execution services, all tailored to your specific needs. From ideation to implementation, let us handle
every aspect of your project journey, so you can focus on what matters most.
            </p>
            <a href="#get-in-touch" class="cs-button-solid">Let's Talk →</a>
        </div>
        <picture class="cs-picture">
            <source media="(max-width: 600px)" srcset=./assets/watch-mechanism-YbNaqDaVvDH7j365.webp>
            <source media="(min-width: 601px)" srcset=./assets/watch-mechanism-YbNaqDaVvDH7j365.webp>
            <img loading="lazy" decoding="async" src=./assets/watch-mechanism-YbNaqDaVvDH7j365.webp alt="Watch mechanism symbolising comprehensive consulting, R&D, and project execution services" width="522" height="609"
                aria-hidden="true">
        </picture>
    </div>
</section>
<style>
    #about-us-229 {
        padding: 3.75rem 1rem;
				background: var(--bg-dark);
    }

    #about-us-229 .cs-container {
        width: 100%;
        max-width: 80rem;
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 2.5rem;
        color: #000;
    }

    #about-us-229 .cs-content {
        text-align: left;
        width: 100%;
        max-width: 40.625rem;
    }

    #about-us-229 .cs-title {
        font-size: clamp(2rem, 4vw, 2.5rem);
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 1rem;
        color: var(--main-color);
    }

    #about-us-229 .cs-text {
        font-size: clamp(1rem, 1.5vw, 1.125rem);
        line-height: 1.5;
        margin-bottom: 1.5rem;
        color: var(--text-color);
    }

    #about-us-229 .cs-button-solid {
        width: 25rem;
				height: 5rem;
				text-align: left;
				padding: 1rem 1rem;
				color: var(--main-color);
				border-radius: 7px;
				background: transparent;
				border: 0.2rem solid var(--main-color);
				cursor: pointer;
				font-weight: 600;
				font-size: 1rem;
				position: relative;
				z-index: 1;
				top: 1rem;
    }

    #about-us-229 .cs-button-solid:hover {
        color: var(--text-color);
    }
	
		#about-us-229 .cs-button-solid::after {
        position: absolute;
				content: '';
				width: 0%;
				height: 100%;
				top: 0;
				left: 0;
				background: var(--main-color);
				z-index: -1;
				transition: 0.5s ease;
		}
	
		#about-us-229 .cs-button-solid:hover::after {
        width: 100%;
    }

    #about-us-229 .cs-picture {
        margin-top: 2rem;
				display: block;
        width: 100%;
        max-width: 32.625rem;
        height: auto;
        border-radius: 10%;
        overflow: hidden;
    }

    #about-us-229 .cs-picture img {
        width: 100%;
        height: auto;
        object-fit: cover;
    }

    #about-us-229 .cs-content,
    #about-us-229 .cs-picture {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 1s ease-out, transform 1s ease-out;
    }

    #about-us-229 .cs-content.is-visible,
    #about-us-229 .cs-picture.is-visible {
        opacity: 1;
        transform: translateY(0);
    }

    /* Tablet and larger screens */
    @media only screen and (min-width: 64rem) {
        #about-us-229 .cs-container {
            flex-direction: row;
            justify-content: space-between;
            gap: 3.75rem;
        }

        #about-us-229 .cs-content {
            width: 50%;
        }

        #about-us-229 .cs-picture {
            width: 50%;
        }
    }
</style>

<script>
    (function () {
        document.addEventListener('DOMContentLoaded', function () {
            const section = document.querySelector('#about-us-229');
            const content = section.querySelector('.cs-content');
            const picture = section.querySelector('.cs-picture');

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        content.classList.add('is-visible');
                        picture.classList.add('is-visible');
                        observer.unobserve(entry.target);
                    }
                });
            }, {
                threshold: 0.3 // Trigger when X% of the section is visible
            });

            observer.observe(section);
        });
    })();
</script>
		

<section id="section-l-229">
    <div class="cs-container">
        <picture class="cs-picture">
            <source media="(max-width: 600px)" srcset=./assets/experts-YKbJEoDKzKUEGMqj.webp>
            <source media="(min-width: 601px)" srcset=./assets/experts-YKbJEoDKzKUEGMqj.webp>
            <img loading="lazy" decoding="async" src=./assets/experts-YKbJEoDKzKUEGMqj.webp alt="Microscop symbolising expertise across diverse disciplines, from
business analysis and technological to marketing and physical execution" width="522" height="609"
                aria-hidden="true">
        </picture>
        <div class="cs-content">
            <h2 class="cs-title">Our Team</h2>
            <p class="cs-text">
                ANTEI leverages a global team of 20+ seasoned experts across diverse disciplines, from
business analysis and technological to marketing and physical execution. This comprehensive
team ensures prompt execution of projects from different industries and business regions.
            </p>
        </div>
    </div>
</section>
<style>
    #section-l-229 {
        padding: 3.75rem 1rem;
				background: var(--bg-dark);
    }

    #section-l-229 .cs-container {
        width: 100%;
        max-width: 80rem;
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 2.5rem;
    }

    #section-l-229 .cs-content {
        text-align: left;
        width: 100%;
        max-width: 40.625rem;
    }

    #section-l-229 .cs-title {
        font-size: clamp(2rem, 4vw, 2.5rem);
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 1rem;
        color: var(--main-color);
    }

    #section-l-229 .cs-text {
        font-size: clamp(1rem, 1.5vw, 1.125rem);
        line-height: 1.5;
        margin-bottom: 1.5rem;
        color: var(--text-color);
    }

    #section-l-229 .cs-button-solid {
        font-size: 1rem;
        line-height: clamp(2.875rem, 5.5vw, 3.5rem);
        text-decoration: none;
        font-weight: 700;
        text-align: center;
        color: var(--bodyTextColorWhite);
        min-width: 9.375rem;
        padding: 0 1.5rem;
        background-color: var(--primary);
        border-radius: 0.25rem;
        display: inline-block;
        transition: background-color 0.3s;
    }

    #section-l-229 .cs-button-solid:hover {
        background-color: var(--primaryLight);
    }

    #section-l-229 .cs-picture {
        display: block;
        width: 100%;
        max-width: 32.625rem;
        height: auto;
        border-radius: 10%;
        overflow: hidden;
    }

    #section-l-229 .cs-picture img {
        width: 100%;
        height: auto;
        object-fit: cover;
    }

    #section-l-229 .cs-content,
    #section-l-229 .cs-picture {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 1s ease-out, transform 1s ease-out;
    }

    #section-l-229 .cs-content.is-visible,
    #section-l-229 .cs-picture.is-visible {
        opacity: 1;
        transform: translateY(0);
    }

    /* Tablet and larger screens */
    @media only screen and (min-width: 64rem) {
        #section-l-229 .cs-container {
            flex-direction: row;
            justify-content: space-between;
            gap: 3.75rem;
        }

        #section-l-229 .cs-content {
            width: 50%;
        }

        #section-l-229 .cs-picture {
            width: 50%;
        }
    }
</style>

<script>
    (function () {
    document.addEventListener('DOMContentLoaded', function () {
        const section = document.querySelector('#section-l-229');
        const content = section.querySelector('.cs-content');
        const picture = section.querySelector('.cs-picture');

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    content.classList.add('is-visible');
                    picture.classList.add('is-visible');
                    observer.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.3 // Trigger when X% of the section is visible
        });

        observer.observe(section);
    });
})();
</script>
		

<section id="timeline-229">
    <h2 class="cs-title">Explore our Key Projects</h2>
    <div class="timeline-container">
        <div class="timeline">
            <!-- Years will be dynamically populated here -->
        </div>
    </div>
    <div class="content-container" id="content-container">
        <!-- Boxes will be dynamically generated here -->
    </div>
    <div class="splide" id="content-splide">
        <div class="splide__track">
            <ul class="splide__list" id="content-splide-list"></ul>
        </div>
    </div>

    <!-- Modal Structure -->
    <div class="modal" id="modal">
        <div class="modal-content" id="modal-content">
            <div class="modal-img-container">
                <img id="modal-image" src="" alt="Project Image">
                <span class="modal-field" id="modal-field"></span>
                <span class="modal-title" id="modal-title"></span>
            </div>
            <div class="modal-body">
                <div class="modal-section">
                    <h3>Client Overview</h3>
                    <p id="modal-overview"></p>
                </div>
                <div class="modal-section">
                    <h3>Challenge</h3>
                    <p id="modal-challenge"></p>
                </div>
                <div class="modal-section">
                    <h3>Solution</h3>
                    <p id="modal-solution"></p>
                </div>
                <div class="modal-section">
                    <h3>Implementation</h3>
                    <p id="modal-implementation"></p>
                </div>
                <div class="modal-section">
                    <h3>Results</h3>
                    <p id="modal-results"></p>
                </div>
                <div class="modal-section">
                    <h3>Project Duration</h3>
                    <p id="modal-duration"></p>
                </div>
                <div class="modal-section">
                    <h3>Client Testimonial</h3>
                    <p id="modal-testimonial"></p>
                </div>
            </div>
            <button class="modal-close-button" aria-label="Close modal">&larr;</button>
        </div>
    </div>
</section>
<script>
    (function () {
        document.addEventListener('DOMContentLoaded', function () {
            const timelineSection = document.getElementById('timeline-229');
            if (!timelineSection) return; // Exit if the timeline section doesn't exist

            const timelineContainer = timelineSection.querySelector('.timeline-container');
            const contentContainer = timelineSection.querySelector('.content-container');
            const timelineElement = timelineSection.querySelector('.timeline');
            const splideElement = timelineSection.querySelector('#content-splide');
            const splideList = timelineSection.querySelector('#content-splide-list');

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('is-visible');
                        observer.unobserve(entry.target);
                    }
                });
            }, {
                threshold: 0.3
            });

            if (timelineContainer) observer.observe(timelineContainer);
            if (contentContainer) observer.observe(contentContainer);

            function animateContentBoxes() {
                const contentBoxes = timelineSection.querySelectorAll('.content-box');
                contentBoxes.forEach((box, index) => {
                    setTimeout(() => {
                        box.classList.add('is-visible');
                    }, index);
                });
            }

            const modal = timelineSection.querySelector('#modal');
            const modalImage = timelineSection.querySelector('#modal-image');
            const modalField = timelineSection.querySelector('#modal-field');
            const modalTitle = timelineSection.querySelector('#modal-title');
            const modalOverview = timelineSection.querySelector('#modal-overview');
            const modalChallenge = timelineSection.querySelector('#modal-challenge');
            const modalSolution = timelineSection.querySelector('#modal-solution');
            const modalImplementation = timelineSection.querySelector('#modal-implementation');
            const modalResults = timelineSection.querySelector('#modal-results');
            const modalDuration = timelineSection.querySelector('#modal-duration');
            const modalTestimonial = timelineSection.querySelector('#modal-testimonial');

            if (modal) {
                const modalOverlay = document.createElement('div');
                modalOverlay.className = 'modal-overlay';
                modal.insertBefore(modalOverlay, modal.firstChild);

                const modalCloseButton = timelineSection.querySelector('.modal-close-button');

                function openModal() {
                    modal.style.display = 'flex';
                    const modalContent = timelineSection.querySelector('#modal-content');
                    modalContent.classList.add('animate__animated', 'animate__fadeIn', 'animate__faster');
                    document.body.style.overflow = 'hidden';
                    modal.scrollTop = 0;

                    const header = document.querySelector("#cs-navigation");
                    if (header) {
                        header.style.display = 'none';
                    }
                }

                function closeModal() {
                    modal.style.display = 'none';
                    document.body.style.overflow = '';
                    const header = document.querySelector("#cs-navigation");
                    if (header) {
                        header.style.display = '';
                    }
                }

                if (modalCloseButton) modalCloseButton.addEventListener('click', closeModal);
                modalOverlay.addEventListener('click', closeModal);
            }

            let contentData;
            let timelineSplide = null;

            fetch('./timeline_data.json')
                .then(response => response.json())
                .then(data => {
                    contentData = data;
                    const years = Object.keys(contentData);
                    populateYears(years);
                    const latestYear = years.sort((a, b) => b - a)[0];
                    selectYear(latestYear);
                });

            function populateYears(years) {
                if (!timelineElement) return;
                years.sort((a, b) => b - a).forEach(year => {
                    const yearElement = document.createElement('div');
                    yearElement.className = 'year';
                    yearElement.setAttribute('data-year', year);
                    yearElement.textContent = year;
                    yearElement.addEventListener('click', () => selectYear(year));
                    timelineElement.appendChild(yearElement);
                });
            }

            function selectYear(year) {
                timelineSection.querySelectorAll('.year').forEach(y => y.classList.remove('selected'));
                const selectedYearElement = timelineSection.querySelector(`.year[data-year="${year}"]`);
                if (selectedYearElement) {
                    selectedYearElement.classList.add('selected');
                    updateContent(year);
                }
            }

            function updateContent(year) {
                if (!contentContainer || !splideList) return;
                contentContainer.innerHTML = "";
                splideList.innerHTML = "";
                contentContainer.classList.remove('is-visible');

                contentData[year].forEach(item => {
                    const box = createContentBox(item);
                    contentContainer.appendChild(box);

                    const splideSlide = document.createElement('li');
                    splideSlide.className = 'splide__slide';
                    splideSlide.appendChild(createContentBox(item));
                    splideList.appendChild(splideSlide);
                });

                setTimeout(() => {
                    contentContainer.classList.add('is-visible');
                    animateContentBoxes();
                }, 50);

                if (window.innerWidth <= 765) {
                    if (timelineSplide) {
                        timelineSplide.destroy();
                        timelineSplide = null;
                    }
                    timelineSplide = new Splide('#content-splide', {
                        type: 'loop',
                        perPage: 1,
                        perMove: 1,
                        gap: '1rem',
                        arrows: false,
                        autoplay: true,
                        pauseOnHover: true,
                        pauseOnFocus: true,
                    }).mount();
                }
            }

            function createContentBox(item) {
                const box = document.createElement('div');
                box.className = 'content-box';
                box.style.backgroundImage = item.bgImage;
                box.innerHTML = `
                <span class="tag">${item.tag}</span>
                <p class="description">${item.description}</p>
            `;
                box.addEventListener('click', () => {
                    if (modalImage) modalImage.src = item.image;
                    if (modalField) modalField.textContent = item.field;
                    if (modalTitle) modalTitle.innerHTML = item.title;
                    if (modalOverview) modalOverview.textContent = item.overview;
                    if (modalChallenge) modalChallenge.textContent = item.challenge;
                    if (modalSolution) modalSolution.textContent = item.solution;
                    if (modalImplementation) modalImplementation.innerHTML = item.implementation.map(point => `<li>${point}</li>`).join('');
                    if (modalResults) modalResults.innerHTML = item.results;
                    if (modalDuration) modalDuration.textContent = item.duration;
                    if (modalTestimonial) modalTestimonial.textContent = item.testimonial;

                    openModal();
                });
                return box;
            }

            window.addEventListener('resize', () => {
                if (window.innerWidth <= 765) {
                    if (!timelineSplide && splideElement) {
                        timelineSplide = new Splide('#content-splide', {
                            type: 'loop',
                            perPage: 1,
                            perMove: 1,
                            gap: '1rem',
                            arrows: false,
                            autoplay: true,
                            pauseOnHover: true,
                            pauseOnFocus: true,
                        }).mount();
                    }
                } else {
                    if (timelineSplide) {
                        timelineSplide.destroy();
                        timelineSplide = null;
                    }
                }
            });
        });
    })();    
</script>


<style>
		#timeline-229 {
				background: var(--bg-dark);
		}
	
    #timeline-229 .timeline-container {
				display: flex;
        justify-content: center;
        margin: 20px 0;
        overflow-x: auto;
        width: 100%;
        scrollbar-width: thin;
        /* For Firefox */
        animation: fadeIn 1s forwards;
    }

    #timeline-229 .cs-title {
        font-size: clamp(2rem, 4vw, 2.5rem);        
				font-weight: 700;
        text-align: center;        /* Centers text */
        margin: 0 auto 2rem auto;        /* Centers element with margin */
        color: var(--main-color);        
				display: block;
        /* Ensure it behaves as a block-level element */    }

    #timeline-229 .year {
        background-color: #ddd;
				width: 10rem;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
				font-weight: 600;
    }

    #timeline-229 .year.selected {
        background-color: #f2b44b;
        color: white;
    }

    #timeline-229 .content-container {
        display: flex;
        justify-content: center;
        overflow-x: auto;
        gap: 20px;
        padding: 20px;
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        flex-wrap: nowrap;
        animation: fadeIn 1s forwards;
				margin-bottom: 5rem;
    }

    #timeline-229 .content-box {
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        padding: 20px;
        width: 20rem;
        height: 15rem;
        min-width: 20rem;
        position: relative;
        text-align: center;
        cursor: pointer;
        transition: transform 0.1s;
        background-size: cover;
        background-position: center;
        overflow: hidden;
    }

    #timeline-229 .content-box::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        /* Semi-transparent black */
        border-radius: 15px;
        z-index: 1;
        /* Ensure it sits above the background but below the text */
    }

    #timeline-229 .content-box .description {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
        text-align: center;
        width: 100%;
        transition: opacity 0.1s;
        position: relative;
        color: white;
        /* White text color for description */
        z-index: 2;
        /* Ensure text is above the overlay */
        margin: 40px 0 0;
    }

    #timeline-229 .content-box:hover {
        transform: scale(1.02);
    }

    #timeline-229 .tag {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: #904af2;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        z-index: 2;
        /* Ensure tag is above the overlay */
    }

    #timeline-229 .description {
        margin: 40px 0 0;
    }

    @media (max-width: 765px) {
        #timeline-229 .content-box {
            width: calc(50% - 20px);
        }
    }

    @media (max-width: 480px) {
        #timeline-229 .content-box {
            width: 100%;
        }
    }

    @media (min-width: 765px) {
        #timeline-229 .content-container {
            flex-wrap: wrap;
        }

        #timeline-229 .content-box {
            width: calc(30% - 20px);
            /* Ensure three boxes per row */
        }
    }

    /* Modal styles */
    #timeline-229 .modal {
        display: none;
        /* Hidden by default */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000;
        /* Ensure it sits above other content */
        overflow: auto;
        /* Enable scrolling if needed */
        align-items: right;
    }

    #timeline-229 .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(5px);
        z-index: 999;
    }

    #timeline-229 .modal-content {
        background-color: white;
        border-radius: 15px;
        padding: 20px;
        max-width: 1400px;
        margin: auto;
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: left;
        z-index: 1000;
    }

    #timeline-229 .modal-close-button {
        width: 40px;
        height: 40px;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24px;
        color: var(--primary);
    }

    #timeline-229 .modal-close-button:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(242, 180, 75, 0.5);
    }

    #timeline-229 .modal-img-container {
        position: relative;
        width: 100%;
        max-height: 400px;
        /* Adjust as needed */
        overflow: hidden;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    #timeline-229 .modal-img-container img {
        width: 100%;
        height: auto;
        display: block;
    }

    #timeline-229 .modal-img-container::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        /* Semi-transparent overlay */
        z-index: 1;
        /* Overlay sits above the image but below the content */
    }

    #timeline-229 .modal-field {
        position: absolute;
        top: 20px;
        left: 20px;
        background-color: #904af2;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        z-index: 2;
    }

    #timeline-229 .modal-title {
        position: absolute;
        top: 20%;
        left: 50%;
        width: 100%;
        transform: translate(-50%, 0%);
        font-size: 1.5rem;
        font-weight: 700;
        color: white;
        padding: 10px;
        border-radius: 5px;
        text-align: center;
        z-index: 2;
        /* Ensure it sits above the overlay */
    }

    #timeline-229 .modal-section {
        margin-bottom: 20px;
        padding: 0 20px;
        text-align: left;
    }

    #timeline-229 .modal-section h3 {
        margin: 0 0 10px;
        font-size: 1.4rem;
        color: #333;
    }

    #timeline-229 .modal-section p {
        margin: 0;
        font-weight: 600;
        color: #666;
    }

    #timeline-229 .modal-section b {
        margin: 0;
        color: #000;
    }

    #timeline-229 .timeline-container,
    #timeline-229 .content-container {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.3s ease-out, transform 0.3s ease-out;
    }

    #timeline-229 .timeline-container.is-visible,
    #timeline-229 .content-container.is-visible {
        opacity: 1;
        transform: translateY(0);
    }

    #timeline-229 .content-box {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.2s ease-out, transform 0.2s ease-out;
    }

    #timeline-229 .content-box.is-visible {
        opacity: 1;
        transform: translateY(0);
    }

    #timeline-229 .timeline-container {
        flex-direction: column;
        align-items: center;
    }

    #timeline-229 .timeline {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    #timeline-229 .year {
        flex: 0 1 auto;
        padding: 8px 16px;
        text-align: center;
    }

    #timeline-229 .content-container {
        flex-direction: column;
        align-items: center;
        gap: 20px;
    }

    #timeline-229 .content-box {
        width: 100%;
        max-width: 300px;
        height: auto;
        min-height: 250px;
    }

    @media (max-width: 765px) {
        #timeline-229 .content-box {
            width: 100%;
            padding: 10px 1px;
            max-width: none;
        }
    }

    @media (max-width: 480px) {
        #timeline-229 .year {
            padding: 8px 1px;
            font-size: 0.9rem;
        }

        #timeline-229 .content-box .description {
            font-size: 1.2rem;
        }
    }

    @media (min-width: 765px) {
        #timeline-229 .content-container {
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
        }

        #timeline-229 .content-box {
            width: calc(33.33% - 20px);
            max-width: 300px;
        }
    }

    @media (max-width: 765px) {
        #timeline-229 .content-container {
            display: none;
        }

        #timeline-229 .splide {
            display: block;
            margin-bottom: 5%;
        }
    }

    @media (min-width: 765px) {
        #timeline-229 .content-container {
            display: flex;
        }

        #timeline-229 .splide {
            display: none;
        }
    }
</style>
		

<!-- ============================================ -->
<!--                 Parallax v1                  -->
<!-- ============================================ -->

<section id="parallax-v1">
    <div class="cs-container">
        <div class="cs-flex-group">
            <div class="cs-content">
                <h2 class="cs-title">Driven by Innovation</h2>
                <p class="cs-text">20+ successfully executed projects in Southeast Asia, South America, Eastern Europe and the CIS Region.</p>
                <!--<a href="./portfolio.html" class="cs-button-solid">Explore Success Stories →</a> -->
            </div>
        </div>
    </div>

    <!-- Background Image -->
    <picture class="cs-picture">
        <source media="(max-width: 600px)" srcset="./assets/innovation.jpg">
        <source media="(min-width: 601px)" srcset="./assets/innovation.jpg">
        <img loading="lazy" decoding="async" src="./assets/innovation.jpg" alt="section-image: Innovative technology concept" width="2250" height="1500" aria-hidden="true" class="cs-parallax-image">
    </picture>
</section>

<style>
    /*-- -------------------------- -->
    <---        Parallax v1         -->
    <--- -------------------------- -*/
	
	
    
        #parallax-v1 {
            padding: var(--sectionPadding);
            position: relative;
            z-index: 1;
            overflow: hidden;
        }
				#parallax-v1 .cs-container {
            /*width: 100%;
            max-width: 80rem;
            margin: 0;
            position: relative;*/
						idth: 100%;
            max-width: 80rem;
            margin: auto;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            flex-direction: column;
            position: relative;
            z-index: 10;
        }
        #parallax-v1 .cs-flex-group {
            /*width: 100%;
            max-width: 40rem;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            text-align: left;*/
						width: 100%;
            max-width: 60rem;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            text-align: left;
        }
        #parallax-v1 .cs-picture {
            width: 100%;
            height: 100%;			
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -2;
        }
        #parallax-v1 .cs-picture:before {
            content: '';
            width: 100%;
            height: 100%;
            background: #000;
            opacity: 0.6;
            position: absolute;
            display: block;
            top: 0;
            left: 0;
            z-index: 1;
            pointer-events: none;
        }
        #parallax-v1 .cs-picture img {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            object-fit: cover;
        }
        
        #parallax-v1 .cs-title {
            font-size: clamp(2rem, 5vw, 3rem);
            font-weight: 700;
            line-height: 1.2em;
            margin-bottom: 1rem;
            color: var(--bodyTextColorWhite);
        }
        #parallax-v1 .cs-text {
            font-size: clamp(1rem, 1.5vw, 1.125rem);
            line-height: 1.5em;
            margin-bottom: 2rem;
            color: var(--bodyTextColorWhite);
        }
        #parallax-v1 .cs-button-solid {
            font-size: 1rem;
            font-weight: 700;
            line-height: 3em;
            text-decoration: none;
            padding: 0 2rem;
            background-color: var(--primary);
            color: #fff;
            border: none;
            display: inline-block;
            position: relative;
            z-index: 1;
            transition: all 0.3s ease;
        }
        #parallax-v1 .cs-button-solid:hover {
            background-color: var(--primaryLight);
        }
        #parallax-v1 .cs-content, #parallax-v1 .cs-picture {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 1s ease-out, transform 1s ease-out;
        }
        #parallax-v1 .cs-content.is-visible, #parallax-v1 .cs-picture.is-visible {
            opacity: 1;
            transform: translateY(0);
        }
    
    
</style>

<script>
    (function () {
    document.addEventListener('DOMContentLoaded', function () {
        const section = document.querySelector('#parallax-v1');
        const content = section.querySelector('.cs-content');
        const picture = section.querySelector('.cs-picture');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    content.classList.add('is-visible');
                    picture.classList.add('is-visible');
                    observer.unobserve(entry.target);
                }
            });
        }, { threshold: 0.3 });
        observer.observe(section);

        var image = document.querySelector('.cs-parallax-image');
        new simpleParallax(image, {
            scale: 1.5,
            delay: .6,
            transition: 'cubic-bezier(0,0,0,1)'
        });
    });
})();
</script>
		

<section id="services-230">
    <div class="cs-container">
        <h2 class="cs-title">Strategic & Technological Consulting</h2>
        <div class="cs-line cs-line-primary"></div>
        <div class="cs-grid" id="strategic-grid"></div>
        <div class="splide" id="strategic-splide">
            <div class="splide__track">
                <ul class="splide__list" id="strategic-splide-list"></ul>
            </div>
        </div>

        <h2 class="cs-title cs-title-second">Technologies & System Integration</h2>
        <div class="cs-line cs-line-secondary"></div>
        <div class="cs-grid" id="technologies-grid"></div>
        <div class="splide" id="technologies-splide">
            <div class="splide__track">
                <ul class="splide__list" id="technologies-splide-list"></ul>
            </div>
        </div>
    </div>
</section>

<style>
    #services-230 {
        background: var(--bg-dark);
        color: var(--bodyTextColor);
        padding: 3rem 1rem;
    }

    #services-230 .cs-container {
        max-width: 80rem;
        margin: 0 auto;
    }

    #services-230 .cs-title {
        font-size: clamp(1.5rem, 3vw, 2rem);
        text-align: left;
        margin-bottom: 1rem;
        color: var(--text-color);
    }

    #services-230 .cs-title-second {
        margin-top: 3rem;
    }

    #services-230 .cs-line {
        height: 0.25rem;
        width: 50%;
        margin: 0 0 3rem;
    }

    #services-230 .cs-line-primary {
        background-color: var(--main-color);
    }

    #services-230 .cs-line-secondary {
        background-color: var(--secondary);
    }

    #services-230 .cs-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
    }

    #services-230 .cs-item {
        position: relative;
        width: 100%;
        padding-top: 75%;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        transition-timing-function: ease;
        transition: transform 0.2s;
        cursor: pointer;
    }

    #services-230 .cs-picture {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    #services-230 .cs-picture img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        filter: grayscale(100%);
    }

    #services-230 .cs-content {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        padding: 20px;
        box-sizing: border-box;
        border-radius: 15px;
        transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        overflow: hidden;
        color: white;
        background: rgba(0, 0, 0, 0.5);
    }

    #services-230 .n-color-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        mix-blend-mode: multiply;
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    #strategic-grid .n-color-overlay,
    #strategic-splide .n-color-overlay {
        background-color: var(--secondary);
    }

    #technologies-grid .n-color-overlay,
    #technologies-splide .n-color-overlay {
        background-color: var(--primary);
    }

    #services-230 .cs-item-title {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
        text-align: center;
        width: 100%;
        transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        position: absolute;
        top: 20%;
    }

    #services-230 .cs-item-subtitle {
        font-size: 1rem;
        font-weight: 600;
        margin: 0;
        text-align: center;
        width: 100%;
        transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        position: absolute;
        top: 45%;
        opacity: 1;
    }

    #services-230 .cs-item-text {
        font-size: 1rem;
        font-weight: 600;
        width: 100%;
        text-align: left;
        position: absolute;
        bottom: 10px;
        left: 100%;
        right: 10px;
        box-sizing: border-box;
        white-space: pre-wrap;
        top: 30%;
        padding-left: 2%;
        padding-right: 4%;
        transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* Active state styles */

    #services-230 .cs-item.active .cs-picture {
        transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        transform: translate(15%, 15%) scale(1.5);
        filter: blur(3px);
    }

    #services-230 .cs-item.active .cs-item-title {
        top: 10%;
    }

    #services-230 .cs-item.active .cs-item-subtitle {
        opacity: 0;
    }

    #services-230 .cs-item.active .cs-item-text {
        left: 10px;
    }

    #services-230 .cs-item.active .n-color-overlay {
        opacity: 1;
    }

    @media (max-width: 765px) {
        #services-230 .cs-grid {
            display: none;
        }

        #services-230 .splide {
            display: block;
        }

        #services-230 .cs-item {
            height: 360px;
            padding-top: 0;
        }
    }

    @media (min-width: 765px),
    (max-width: 1100px) {
        #services-230 .cs-item {
            height: 400px;
        }
    }

    @media (min-width: 765px) {
        #services-230 .cs-grid {
            display: grid;
        }

        #services-230 .splide {
            display: none;
        }
    }
</style>

<script>
    (function() {
        document.addEventListener('DOMContentLoaded', function () {
            const servicesSection = document.getElementById('services-230');
            if (!servicesSection) return; // Exit if the services section doesn't exist
    
            const strategicGrid = servicesSection.querySelector('#strategic-grid');
            const technologiesGrid = servicesSection.querySelector('#technologies-grid');
            const strategicSplideList = servicesSection.querySelector('#strategic-splide-list');
            const technologiesSplideList = servicesSection.querySelector('#technologies-splide-list');
            const widthForClick = 1100;
    
            function createServiceItem(item, isMobile) {
                const itemHtml = `
                    <div class="cs-item">
                        <picture class="cs-picture">
                            <source media="(max-width: 600px)" srcset="${item.imgMobile}">
                            <source media="(min-width: 601px)" srcset="${item.imgDesktop}">
                            <img loading="lazy" decoding="async" src="${item.imgDesktop}" alt="${item.title}" aria-hidden="true">
                        </picture>
                        <div class="n-color-overlay"></div>
                        <div class="cs-content">
                            <h3 class="cs-item-title">${item.title}</h3>
                            <h4 class="cs-item-subtitle">${item.subtitle}</h4>
                            <p class="cs-item-text">${item.text}</p>
                        </div>
                    </div>
                `;
                return isMobile ? `<li class="splide__slide">${itemHtml}</li>` : itemHtml;
            }
    
            function loadServices(url, gridElement, splideListElement) {
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        gridElement.innerHTML = data.map(item => createServiceItem(item, false)).join('');
                        splideListElement.innerHTML = data.map(item => createServiceItem(item, true)).join('');
    
                        const observer = new IntersectionObserver((entries) => {
                            entries.forEach(entry => {
                                if (entry.isIntersecting) {
                                    entry.target.classList.add('is-visible');
                                    observer.unobserve(entry.target);
                                }
                            });
                        }, {
                            threshold: 0.3
                        });
    
                        gridElement.querySelectorAll('.cs-item').forEach(item => {
                            observer.observe(item);
                        });
    
                        initializeSplides();
                        initializeItemBehavior();
                    })
                    .catch(error => console.error('Error loading services:', error));
            }
    
            loadServices('./Strategic_Technological_Consulting_data.json', strategicGrid, strategicSplideList);
            loadServices('./Technologies_System_Integration_data.json', technologiesGrid, technologiesSplideList);
    
            let splideInstances = [];
    
            function initializeSplides() {
                splideInstances.forEach(instance => {
                    if (instance.splide) {
                        instance.splide.destroy();
                    }
                });
                splideInstances = [];
    
                if (window.innerWidth <= widthForClick) {
                    const splideElements = servicesSection.getElementsByClassName('splide');
                    for (let i = 0; i < splideElements.length; i++) {
                        const splide = new Splide(splideElements[i], {
                            type: 'loop',
                            perPage: 1,
                            perMove: 1,
                            gap: '1rem',
                            arrows: false,
                            autoplay: true,
                            pauseOnHover: true,
                            pauseOnFocus: true,
                        }).mount();
                        splideInstances.push({ element: splideElements[i], splide: splide });
                    }
                }
            }
    
            function initializeItemBehavior() {
                const items = servicesSection.querySelectorAll('.cs-item');
                items.forEach(item => {
                    if (window.innerWidth > widthForClick) {
                        // Desktop behavior
                        item.addEventListener('mouseenter', () => item.classList.add('active'));
                        item.addEventListener('mouseleave', () => item.classList.remove('active'));
                    } else {
                        // Mobile behavior
                        item.addEventListener('click', handleItemClick);
                    }
                });
            }
    
            function handleItemClick(event) {
                event.preventDefault();
                event.stopPropagation();
                const clickedItem = event.currentTarget;
                const allItems = servicesSection.querySelectorAll('.cs-item');
    
                if (clickedItem.classList.contains('active')) {
                    clickedItem.classList.remove('active');
                } else {
                    allItems.forEach(item => item.classList.remove('active'));
                    clickedItem.classList.add('active');
                }
            }
    
            function updateItemBehavior() {
                const items = servicesSection.querySelectorAll('.cs-item');
                items.forEach(item => {
                    item.removeEventListener('mouseenter', () => {});
                    item.removeEventListener('mouseleave', () => {});
                    item.removeEventListener('click', handleItemClick);
    
                    if (window.innerWidth > widthForClick) {
                        // Desktop behavior
                        item.addEventListener('mouseenter', () => item.classList.add('active'));
                        item.addEventListener('mouseleave', () => item.classList.remove('active'));
                    } else {
                        // Mobile behavior
                        item.addEventListener('click', handleItemClick);
                    }
                });
            }
    
            // Initial call to set up the correct layout
            initializeSplides();
            initializeItemBehavior();
    
            // Re-initialize on window resize
            window.addEventListener('resize', function () {
                initializeSplides();
                updateItemBehavior();
            });
        });
    })();
    </script>
		

<!-- ============================================ -->
<!--            Industries We Develop             -->
<!-- ============================================ -->

<section id="industries-we-develop">
    <div class="cs-container">
        <div class="cs-flex-group">
            <div class="cs-content">
                <h2 class="cs-title">Industries We Develop</h2>
                <p class="cs-text">We specialize in small to large-scale business transformation projects, taking into account industry specifics. We provide a wide range of services, from strategy development, process optimization & automation, technological development, R&D of novel technologies and products.</p>
                <p class="cs-text">We work in the fields of AI/ML, big data, agriculture, food technology, sustainability, mining, among others.</p>
            </div>
            <!--<div class="cs-button-group" id="tag-buttons">
                <!-- Tag buttons will be dynamically generated here
            </div>-->
        </div>
    </div>

    <!-- Background Image -->
    <picture class="cs-picture">
        <source media="(max-width: 600px)" srcset="./assets/unsplash_photo-1527314392553-2c7bded21b23.webp">
        <source media="(min-width: 601px)" srcset="./assets/unsplash_photo-1527314392553-2c7bded21b23.webp">
        <img loading="lazy" decoding="async" src="./assets/unsplash_photo-1527314392553-2c7bded21b23.webp" alt="Industrial port with cranes and ships at sunset" width="1920" height="1080" aria-hidden="true" class="cs-parallax-image">
    </picture>
</section>

<style>
    /*-- -------------------------- -->
    <---    Industries We Develop   -->
    <--- -------------------------- -->*/
    
        #industries-we-develop {
            padding: var(--sectionPadding);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }
        
        #industries-we-develop .cs-container {
            width: 100%;
            max-width: 80rem;
            margin: auto;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            flex-direction: column;
            position: relative;
            z-index: 10;
        }
        
        #industries-we-develop .cs-flex-group {
            width: 100%;
            max-width: 60rem;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            text-align: left;
        }
        
        #industries-we-develop .cs-content {
            max-width: 100%;
            margin-bottom: 2rem;
        }
        
        #industries-we-develop .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 700;
            line-height: 1.2em;
            text-align: inherit;
            max-width: 20ch;
            margin: 0 0 1rem;
            color: var(--bodyTextColorWhite);
            opacity: 0;
            transform: translateY(2rem);
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
        }
        
        #industries-we-develop .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: 40rem;
            margin: 0 0 1rem;
            color: var(--bodyTextColorWhite);
            opacity: 0;
            transform: translateY(2rem);
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
        }
        
        #industries-we-develop .cs-button-group {
            width: 100%;
            max-width: 60rem;
            margin: 0;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }
        
        #industries-we-develop .cs-button-solid {
            font-size: 0.9rem;
            font-weight: 600;
            text-decoration: none;
            text-align: center;
            margin: 0;
            color: #fff;
            background-color: var(--primary);
            padding: 0.75rem 1.25rem;
            border-radius: 2rem;
            display: inline-block;
            position: relative;
            z-index: 1;
            transition: all 0.3s ease-in-out;
            opacity: 0;
            transform: translateY(2rem);
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out, background-color 0.3s ease-in-out;
        }
        
        #industries-we-develop .cs-button-solid:hover {
            background-color: var(--primaryLight);
        }
        
        #industries-we-develop .cs-picture {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
        }
        
        #industries-we-develop .cs-picture:before {
            content: '';
            width: 100%;
            height: 100%;
            background: #000;
            opacity: .5;
            position: absolute;
            display: block;
            top: 0;
            left: 0;
            z-index: 1;
        }
        
        #industries-we-develop .cs-picture img {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            object-fit: cover;
        }
    
    

</style>

<script>
    (function () {
    document.addEventListener('DOMContentLoaded', function () {
        const section = document.querySelector('#industries-we-develop');
        const content = section.querySelector('.cs-content');
        //const buttonGroup = document.getElementById('tag-buttons');
        //let portfolioData;
        //let uniqueTags = new Set();

        /*// Fetch portfolio data
        fetch('./timeline_data.json')
            .then(response => response.json())
            .then(data => {
                portfolioData = data;
                processData();
                createTagButtons();
                animateContent();
            })
            .catch(error => console.error('Error fetching portfolio data:', error));

        function processData() {
            Object.values(portfolioData).forEach(yearData => {
                yearData.forEach(project => {
                    uniqueTags.add(project.tag);
                });
            });
        }

        function createTagButtons() {
            uniqueTags.forEach(tag => {
                const button = document.createElement('a');
                button.href = `/portfolio.html#dynamic-p-233-${tag.replace(/\s+/g, '_')}`;
                button.className = 'cs-button-solid';
                button.textContent = tag;
                buttonGroup.appendChild(button);
            });
        }*/

        function animateContent() {
            content.querySelector('.cs-title').style.opacity = '1';
            content.querySelector('.cs-title').style.transform = 'translateY(0)';
            
            content.querySelectorAll('.cs-text').forEach((text, index) => {
                setTimeout(() => {
                    text.style.opacity = '1';
                    text.style.transform = 'translateY(0)';
                }, 200 * (index + 1));
            });
            
            //buttonGroup.querySelectorAll('.cs-button-solid').forEach((button, index) => {
                //setTimeout(() => {
                 //   button.style.opacity = '1';
               //     button.style.transform = 'translateY(0)';
             //   }, 200 * (index + 1));
           // });
        }

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    animateContent();
                    observer.unobserve(entry.target);
                }
            });
        }, { threshold: 0.3 });
        
        observer.observe(section);

        // Initialize simple-parallax-js
        var image = document.querySelector('.cs-parallax-image');
        new simpleParallax(image, {
            scale: 1.5,
            delay: .6,
            transition: 'cubic-bezier(0,0,0,1)'
        });
    });
})();
</script>
		

<!-- ============================================ -->
<!--                 Our Partners                 -->
<!-- ============================================ -->

<section id="our-partners-229" class="py-16 bg-white overflow-hidden">
    <div class="container mx-auto px-4">
        <h2 class="text-4xl font-bold text-center text-gray-800 mb-4 animate__animated animate__fadeInUp">Our Partners</h2>
        <p class="text-xl text-center text-gray-600 mb-12 animate__animated animate__fadeInUp" style="animation-delay: 0.2s;">We have forged extensive international partnerships with institutions and businesses.</p>

        <div id="our-partners-229-grid" class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-8" style="min-height: 200px;">
            <!-- Logo items will be dynamically inserted here -->
        </div>

        <p class="text-center text-gray-600 italic mt-12 animate__animated animate__fadeInUp" style="animation-delay: 0.6s;">Among many others...</p>
    </div>
</section>

<script>
    (function () {
        document.addEventListener('DOMContentLoaded', function () {
            const partnersSection = document.getElementById('our-partners-229');
            if (!partnersSection) return; // Exit if the section doesn't exist

            const gridElement = partnersSection.querySelector('#our-partners-229-grid');

            // Fetch logos data
            fetch("./client_logos.json")
                .then(response => response.json())
                .then(data => {
                    if (data && Array.isArray(data.logos)) {
                        // Populate grid with logo items
                        gridElement.innerHTML = data.logos.map(logo => `
                            <div class="flex items-center justify-center p-4 bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 animate__animated animate__fadeInUp">
                                <img src="${logo.src}" alt="${logo.alt}" class="h-16 w-auto object-contain animate__animated animate__fadeInUp" loading="lazy" decoding="async">
                            </div>
                        `).join('');

                        // Remove min-height after logos are loaded
                        gridElement.style.minHeight = 'auto';
                        // Set up animations
            const animatedElements = partnersSection.querySelectorAll('.animate__animated');
            animatedElements.forEach(el => {
                el.style.opacity = '0';
                el.style.animationPlayState = 'paused';
            });
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.animationPlayState = 'running';
                        observer.unobserve(entry.target);
                    }
                });
            }, {
                threshold: 0.1
            });

            animatedElements.forEach(el => observer.observe(el));
                    } else {
                        console.error('Invalid logo data structure');
                    }
                })
                
                .catch(error => {
                    console.error('Error loading logos:', error);
                    gridElement.innerHTML = '<p class="text-center text-red-500">Error loading partner logos.</p>';
                });

            // Set up animations
            const animatedElements = partnersSection.querySelectorAll('.animate__animated');
            animatedElements.forEach(el => {
                el.style.opacity = '0';
                el.style.animationPlayState = 'paused';
            });

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.animationPlayState = 'running';
                        observer.unobserve(entry.target);
                    }
                });
            }, {
                threshold: 0.1
            });

            animatedElements.forEach(el => observer.observe(el));
        });
    })();
</script>

<style>
	#our-partners-229 {
		background: var(--bg-dark);
	}
	#our-partners-229 h2{
		color: var(--main-color);
	}
	#our-partners-229 p{
		color: var(--text-color);
	}
	
</style>

		

<!-- ============================================ -->
<!--              Get in Touch Section            -->
<!-- ============================================ -->

<section id="get-in-touch">
    <div class="cs-container">
        <div class="cs-content">
            <h2 class="cs-title">Get in Touch</h2>
            <div class="cs-contact-info">
                <div class="cs-item">
                    <h3>Email</h3>
                    <p>contact@anteihk.com</p>
                </div>
                <div class="cs-item">
                    <h3>Address</h3>
                    <p>Suite C, Level 7, World Trust Tower</p>
                    <p>50 Stanley Street</p>
                    <p>Central, Hong Kong</p>
                </div>
            </div>
        </div>
        <form target="_blank" action="https://formsubmit.co/d94134270a6848015f38743a0063f7e2" method="POST" class="cs-form">
            <input type="text" name="company" class="cs-input" placeholder="Company Name*" required>
            <input type="text" name="name" class="cs-input" placeholder="Full Name*" required>
            <input type="email" name="email" class="cs-input" placeholder="Email Address*" required>
            <textarea name="message" class="cs-input cs-textarea" placeholder="Message*" required></textarea>
            <button type="submit" class="cs-button-solid">Submit Form</button>
        </form>
    </div>
    <picture class="cs-background">
        <source media="(max-width: 600px)" srcset="./assets/hong-kong-AzGr3jnXMnSLrbyM.webp">
        <source media="(min-width: 601px)" srcset="./assets/hong-kong-AzGr3jnXMnSLrbyM.webp">
        <img loading="lazy" decoding="async" src="./assets/hong-kong-AzGr3jnXMnSLrbyM.webp" alt="Hong Kong skyline" width="2250" height="1500" aria-hidden="true" class="cs-parallax-image">
    </picture>
</section>

<style>
    /*-- -------------------------- -->
    <---     Get in Touch Section    -->
    <--- -------------------------- -*/

    /* Mobile - 360px */
    @media only screen and (min-width: 0rem) {
        #get-in-touch {
            padding: var(--sectionPadding);
            position: relative;
            z-index: 1;
            overflow: hidden;
        }
        #get-in-touch .cs-container {
            width: 100%;
            max-width: 80rem;
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 3.75rem;
            position: relative;
            z-index: 10;
        }
        #get-in-touch .cs-content {
            width: 100%;
            max-width: 39.375rem;
            text-align: left;
        }
        #get-in-touch .cs-title {
						margin-top: 1rem;
            font-size: var(--headerFontSize);
            font-weight: 700;
            line-height: 1.2em;
            text-align: center;
            margin-bottom: 1.5rem;
            color: var(--bodyTextColorWhite);
        }
        #get-in-touch .cs-contact-info {
            margin-bottom: 2rem;
        }
        #get-in-touch .cs-item {
            margin-bottom: 1rem;
        }
        #get-in-touch .cs-item h3 {
            font-size: 1.25rem;
            font-weight: 700;
            line-height: 1.2em;
            margin-bottom: 0.5rem;
            color: var(--bodyTextColorWhite);
        }
        #get-in-touch .cs-item p {
            font-size: 1rem;
            line-height: 1.5em;
            color: var(--bodyTextColorWhite);
            margin: 0;
        }
        #get-in-touch .cs-form {
            width: 100%;
            max-width: 39.375rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        #get-in-touch .cs-input {
            font-size: 1rem;
            width: 100%;
            height: 3.5rem;
            padding: 0 1.25rem;
            color: var(--bodyTextColor);
            background-color: #fff;
            border: none;
            border-radius: 0.5rem;
        }
        #get-in-touch .cs-textarea {
            min-height: 7.5rem;
            padding-top: 1.25rem;
            resize: vertical;
        }
        #get-in-touch .cs-button-solid {
            font-size: 1rem;
            font-weight: 700;
            text-decoration: none;
            text-align: center;
            margin: 0;
            color: #fff;
            background-color: var(--primary);
            padding: 1rem 2rem;
  					border: none;
            border-radius: 0.5rem;
            transition: background-color 0.3s;
        }
        #get-in-touch .cs-button-solid:hover {
            background-color: var(--primaryLight);
						border-radius: 0.5rem;
        }
        #get-in-touch .cs-background {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
        }
        #get-in-touch .cs-background:before {
            content: '';
            width: 100%;
            height: 100%;
            background: #000;
            opacity: 0.7;
            position: absolute;
            display: block;
            top: 0;
            left: 0;
            z-index: 1;
        }
        #get-in-touch .cs-background img {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            object-fit: cover;
        }
    }

    /* Tablet - 768px */
    @media only screen and (min-width: 48rem) {
        #get-in-touch .cs-container {
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-start;
        }
        #get-in-touch .cs-content,
        #get-in-touch .cs-form {
            width: 47%;
        }
    }

    /* Desktop - 1024px */
    @media only screen and (min-width: 64rem) {
        #get-in-touch .cs-title {
            text-align: left;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const section = document.querySelector('#get-in-touch');
        const content = section.querySelector('.cs-content');
        const form = section.querySelector('.cs-form');
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    content.classList.add('fade-in-up');
                    form.classList.add('fade-in-up');
                    observer.unobserve(entry.target);
                }
            });
        }, { threshold: 0.3 });
        
        observer.observe(section);

        var image = document.querySelector('.cs-parallax-image');
        new simpleParallax(image, {
            scale: 1.5,
            delay: .6,
            transition: 'cubic-bezier(0,0,0,1)'
        });
    });
</script>
		

<footer id="footer-229">
  <div class="cs-container">
    <p class="cs-copyright">Copyright © 2024 ANTEI Limited</p>
    <div class="cs-contact">
      <h3>Contact us</h3>
      <a href="mailto:contact@anteihk.com">contact@anteihk.com</a>
    </div>
  </div>
</footer>

<style>
  #footer-229 {
    padding: var(--sectionPadding);
    background-color: black;
		height: 5rem;
  }

  #footer-229 .cs-container {
    width: 100%;
    max-width: 80rem;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 2rem;
  }

  #footer-229 .cs-copyright {
    font-size: var(--bodyFontSize);
    color: white;
    margin-top: 2rem;
  }

  #footer-229 .cs-contact h3 {
    font-size: clamp(1rem, 2vw, 1.25rem);
    color: white;	
  }

  #footer-229 .cs-contact a {
    font-size: var(--bodyFontSize);
    color: white;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  #footer-229 .cs-contact a:hover {
    color: var(--primary);
  }

  #footer-229 .cs-container {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 1s ease-out, transform 1s ease-out;
  }

  #footer-229 .cs-container.is-visible {
    opacity: 1;
    transform: translateY(0);
  }

  @media (max-width: 768px) {
    #footer-229 .cs-container {
      flex-direction: column;
      align-items: center;
      text-align: center;
    }
  }
</style>

<script>
  (function () {
    document.addEventListener('DOMContentLoaded', function () {
      const footer = document.querySelector('#footer-229 .cs-container');

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('is-visible');
            observer.unobserve(entry.target);
          }
        });
      }, { threshold: 0.3 });

      observer.observe(footer);
    });
  })();
</script>

	</body>

</html>